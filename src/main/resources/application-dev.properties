spring.datasource.url=jdbc://postgresql://localhost:5432/test
spring.datasource.username=rubiya
spring.datasource.password=rubiya

#To indicate that the Project - is not a web Project
#spring.main.web-application-type=NONE

spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect


spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto= update

#Generally data.sql runs afters the Entity Creation. To defer it, this property is used.
spring.jpa.defer-datasource-initialization=true

#--->>> Custom Property defined. Can we read as when goes off
name=Rubiya
#--->>> Written to test the @Value Annotation. By default, this property is set to true in SpringBoot.Hence if we comment also, its set to true
#--->>> We have to define here if we defer from default values only if its spring boot properties

#spring.h2.console.enabled=false
# default path: h2-console
spring.h2.console.path=/h2-ui

##Spring Authourization Login Controle Flow
#spring.security.user.name=Rubiya
#spring.security.user.password=Rubiya

#Set COnfiguration
limits-service.minimum=5
limits-service.maximum=10000

spring.application.name=limits-service
spring.config.import=optional:configserver:http://localhost:8888

#spring.profiles.active=default
#spring.cloud.config.profile=dev
#spring.cloud.config.name= To use other property instead of applicationName.propertyName

#spring.config.activate.on-profile=dev
#spring.kafka.producer.bootstrap-servers=localhost:9092,localhost:9093,localhost:9094
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.IntegerSerializer
#spring.kafka.producer.value-serializer=